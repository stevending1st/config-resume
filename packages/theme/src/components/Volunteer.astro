---
import type { VolunteerComponentProps } from '@config-resume/types';
import { isEmptyObjectArray } from '../utils/array';
import { hasTrue } from '../utils/boolean';

interface Props extends VolunteerComponentProps {}

const { volunteer } = Astro.props;
const hasVolunteer = isEmptyObjectArray(volunteer);
---

{
  hasVolunteer && (
    <section class="flex max-md:flex-col flex-row">
      <header class="max-md:w-full w-3/12 max-md:pb-2 pb-0 text-lg">
        <h2>VOLUNTEER</h2>
      </header>
      <section class="max-md:w-full w-9/12">
        <ol>
          {volunteer!.map(
            (
              {
                organization,
                position,
                url,
                startDate,
                endDate,
                summary,
                highlights
              },
              index,
              { length }
            ) => {
              const isShowThisLi = hasTrue(
                organization,
                position,
                url,
                startDate,
                endDate,
                summary,
                !!highlights?.length
              );
              return (
                isShowThisLi && (
                  <li class={index < length - 1 ? 'mb-3' : ''}>
                    {hasTrue(startDate, endDate) && (
                      <div class="italic font-semibold text-gray-500">
                        {startDate && <time>{startDate}</time>}
                        <span>â€”</span>
                        {endDate && <time>{endDate}</time>}
                      </div>
                    )}
                    {hasTrue(organization, position) && (
                      <div>
                        {organization && (
                          <strong>
                            <a href={url}>{organization}</a>
                          </strong>
                        )}
                        {organization && position && (
                          <span class="mx-1">|</span>
                        )}
                        {position && (
                          <span class="text-gray-500">{position}</span>
                        )}
                      </div>
                    )}
                    {summary && <p>{summary}</p>}
                    {!!highlights?.length && (
                      <ul class="list-disc ps-6 *:pb-1">
                        {highlights?.map(item => (
                          <li>{item}</li>
                        ))}
                      </ul>
                    )}
                  </li>
                )
              );
            }
          )}
        </ol>
      </section>
    </section>
  )
}
